# encoding: utf-8

"""
CCopyright (c) 2018, Maintainer: David Lackovic
based on Ernesto Ruge https://github.com/ruhrmobil-E/meine-luftdaten/
All rights reserved.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
"""

import os


class DefaultConfig(object):
    PROJECT_NAME = "luftdaten"
    PROJECT_URL = 'https://meine.luftaten.info'
    PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))
    PROJECT_VERSION = '0.1.0'
    LOG_DIR = os.path.abspath(os.path.join(PROJECT_ROOT, os.pardir, 'logs'))

    DEBUG = True

    ADMINS = ['david.lackovic@me.com']
    MAILS_FROM = 'noreply@meine.luftdaten.info'

    SECRET_KEY = 'dummysecret'
    SECURITY_PASSWORD_SALT = 'dummysecret'
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SQLALCHEMY_ECHO = False

    MAIL_SERVER = 'mail.example.com'
    MAIL_PORT = 25
    # MAIL_USE_SSL = True
    MAIL_USE_TLS = True
    MAIL_USERNAME = 'user'
    MAIL_PASSWORD = 'password'
    MAIL_SUPPRESS_SEND = False

    # Default docker mariadb wait_timeout is 600s
    SQLALCHEMY_POOL_RECYCLE = 480

    MAPBOX_TOKEN = "dummytoken"

    # all fields after the scheme are optional, and will default to localhost on port 6379, using database 0.
    # redis://:password@hostname:port/db_number
    CELERY_BROKER_URL = 'redis://redis:6379/0'
    CELERY_RESULT_BACKEND = 'redis://redis:6379/0'

    SECURITY_CONFIRMABLE = True
    SECURITY_REGISTERABLE = True
    SECURITY_CHANGEABLE = True
    SECURITY_CONFIRMABLE = True


class LocalConfig(DefaultConfig):
    DEBUG = True
    SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://devel:devel@mysql/devel'
    SQLALCHEMY_BINDS = {
        'external': 'mysql+pymysql://external:external@mysql/external',
    }

    EXTERNAL_DATABASE_HOST = "mysql"
    EXTERNAL_DATABASE_USER = 'external'
    EXTERNAL_DATABASE_PASSWORD = 'external'
    EXTERNAL_DATABASE_DATABASE = 'external'
    EXTERNAL_DATABASE_PORT = 3306

    MAIL_SUPPRESS_SEND = True


class ProdConfig(DefaultConfig):
    DEBUG = False
    SECRET_KEY = SECURITY_PASSWORD_SALT = "..."


def get_config(MODE):
    SWITCH = {
        'development': LocalConfig,
        'production': ProdConfig
    }
    return SWITCH[MODE]

# When testing without proper mail server set up, set MAIL_SUPPRESS_SEND = True
# config property above and uncomment following code to enable mail logging.

#from flask_mail import email_dispatched
#@email_dispatched.connect
#def log_message(message, app):
#    app.logger.info('%s\n%s', message.subject, message.body.encode('utf-8'))
